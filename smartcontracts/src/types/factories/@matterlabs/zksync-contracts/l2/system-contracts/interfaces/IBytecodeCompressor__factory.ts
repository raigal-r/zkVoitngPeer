/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IBytecodeCompressor,
  IBytecodeCompressorInterface,
} from "../../../../../../@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IBytecodeCompressor";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_rawCompressedData",
        type: "bytes",
      },
    ],
    name: "publishCompressedBytecode",
    outputs: [
      {
        internalType: "bytes32",
        name: "bytecodeHash",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IBytecodeCompressor__factory {
  static readonly abi = _abi;
  static createInterface(): IBytecodeCompressorInterface {
    return new utils.Interface(_abi) as IBytecodeCompressorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBytecodeCompressor {
    return new Contract(address, _abi, signerOrProvider) as IBytecodeCompressor;
  }
}
